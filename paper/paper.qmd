---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: [https://github.com/RohanAlexander/starter_folder](https://github.com/RohanAlexander/starter_folder)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(here)
library(reshape2)
library(scales)
library(arrow)
library(knitr)
```

```{r}
#| echo: false
#| warning: false
#| message: false

data <- read_parquet(here("data", "01-analysis_data", "analysis_data.parquet"))

```

# Introduction

Overview paragraph

Estimand paragraph

Results paragraph

Why it matters paragraph

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....




# Data {#sec-data}

## Data Overview
Our data [@shelter]....

We use the statistical programming language R [@citeR]....Our data [@shelter]....


The IPUMS USA database [@ipums2024] is one of the largest collections of microdata from population censuses globally. Supported by organizations such as the National Institutes of Health and the University of Minnesota, it includes data from the American Community Survey (ACS) and other census programs. This resource provides detailed individual-level data, allowing researchers to address specific social, economic, and demographic questions. A key feature of IPUMS USA is its capacity to create customized datasets by selecting variables based on research needs, minimizing the inclusion of irrelevant data.

For this study, data from the 2023 ACS sample in IPUMS USA were used. The selected variables include STATEFIP (state code), SEX (gender), AGE (age), RACE (race), EDUC (educational attainment), EMPSTAT (employment status), UHRSWORK (usual hours worked per week), and INCWAGE (wage and salary income). These variables cover geographic location, demographic characteristics, education, and employment conditions, providing a broad basis for examining factors influencing wage income.

Other databases, such as IPUMS CPS [@ipums_cps2024] and the National Longitudinal Surveys [@nlsy1979], were considered but deemed less suitable for this analysis. IPUMS CPS provides detailed labor market data but has a smaller sample size and limited geographic detail. The National Longitudinal Surveys track specific population groups over time but lack broad representation, making them less ideal for cross-sectional studies. In contrast, the 2023 ACS data in IPUMS USA offers larger population coverage and a diverse range of variables, making it a better choice for analyzing wage determinants.


## Measurement
	
This study utilizes sample data from the 2023 ACS. The dataset is based on a 1% random national sample, ensuring broad representativeness. It includes individuals living in private households as well as those in group quarters, such as student dormitories and care facilities. Weights were applied to the data to account for potential biases introduced by the sampling design and nonresponse.

Data collection for the ACS involved structured questionnaires covering a wide range of topics, such as demographics, education, employment, and income. For example, UHRSWORK (usual hours worked per week) captures labor input based on respondents’ reports of their average weekly work hours. The smallest geographic unit in the dataset is the Public Use Microdata Area (PUMA), which contains at least 100,000 residents and falls within state boundaries. This structure protects respondent privacy while supporting regional analysis.

While the ACS methodology ensures data reliability and extensive coverage, variables like income and work hours rely on self-reported responses, which may introduce minor inaccuracies. Nonetheless, the use of sampling weights and robust design make the dataset a reliable foundation for studying wage income and its associated factors. A detailed explanation of the survey methodology and sampling design is provided in the appendix.

## Dataset Description



```{r}
#| echo: false
#| warning: false


# 确保每个分类变量的所有类别都被显示
complete_data <- data %>%
  group_by(education_level) %>%  # 替换为需要展示的分类变量
  summarise_all(~ first(.))  # 保证每个类别至少展示一行

# 使用 kable 生成表格
library(knitr)
kable(complete_data, caption = "Table 1: Categories of SEX Fully Displayed", align = 'c')


```


The cleaned dataset includes the following variables. UHRSWORK and INCWAGE are retained from the raw data, while the other variables are newly constructed. During the data cleaning process, only individuals aged 18-65 and those with an employment status of "Employed" were included. This ensures the dataset focuses on studying the wage determinants of the employed labor force. Below is a description of each variable and how it was constructed:

UHRSWORK: Reports the number of hours per week the respondent usually worked if they were employed during the reference period. 

INCWAGE: Represents each respondent's total pre-tax wage and salary income earned as an employee during the previous year.

region: Constructed from the STATEFIP variable to represent geographic regions. Valid state codes (1–56) were grouped into four traditional U.S. regions: Northeast, Midwest, South, and West. Each state was assigned to its corresponding region for further regional analysis.

education_level: Derived from the EDUC variable, which indicates respondents' educational attainment as measured by the highest year of school or degree completed. It is grouped into five categories: Below High School (includes all levels below high school), High School (completed grade 12), Some College (completed 1-2 years of college), Bachelor’s Degree (completed 4 years of college), and Above Bachelor (more than 5 years of higher education).age: Filtered from the AGE variable to include only respondents aged 18 to 65. This variable records the respondent’s age in years as of their last birthday.

gender: Based on the SEX variable, with original codes recoded as “Male” and “Female.”

race_group: Constructed from the RACE variable and grouped into four categories: White, Black, Asian, and Other. White and Black remain consistent with the original classifications. Asian includes Chinese, Japanese, and Other Asian categories, while Other includes all other races and mixed-race groups.





## Data Results



```{r}
#| echo: false
#| warning: false
#| label: fig-demographics-distribution
#| fig-cap: "Demographics Distribution and Average Income by Group"
#| fig-subcap: [
#| "Gender Proportion", "Average Income by Gender", 
#| "Race Proportion", "Average Income by Race", 
#| "Region Proportion", "Average Income by Region", 
#| "Education Proportion", "Average Income by Education Level"
#| ]
#| layout-ncol: 2

# Gender proportion and income
gender_count <- data %>%
  group_by(gender) %>%
  summarise(count = n()) %>%
  mutate(percentage = round(count / sum(count) * 100, 1))

pie_chart_gender <- ggplot(gender_count, aes(x = "", y = percentage, fill = gender)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  geom_text(aes(label = paste0(percentage, "%")),
            position = position_stack(vjust = 0.5), size = 3) +
  theme_void() +
  theme(legend.position = "right") +
  labs(fill = "Gender")

avg_income_gender <- data %>%
  group_by(gender) %>%
  summarise(Average_Income = mean(INCWAGE, na.rm = TRUE))

bar_chart_gender <- ggplot(avg_income_gender, aes(x = gender, y = Average_Income, fill = gender)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = round(Average_Income, 0)), 
            vjust = -0.5, size = 3) +
  labs(x = "Gender", y = "Average Income") +
  theme_minimal() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +  # Expand upper limit
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  )

# Race proportion and income
race_count <- data %>%
  group_by(race_group) %>%
  summarise(count = n()) %>%
  mutate(percentage = round(count / sum(count) * 100, 1))

pie_chart_race <- ggplot(race_count, aes(x = "", y = percentage, fill = race_group)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  geom_text(aes(label = paste0(percentage, "%")),
            position = position_stack(vjust = 0.5), size = 3) +
  theme_void() +
  theme(legend.position = "right") +
  labs(fill = "Race Group")

avg_income_race <- data %>%
  group_by(race_group) %>%
  summarise(Average_Income = mean(INCWAGE, na.rm = TRUE))

bar_chart_race <- ggplot(avg_income_race, aes(x = race_group, y = Average_Income, fill = race_group)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = round(Average_Income, 0)), 
            vjust = -0.5, size = 3) +
  labs(x = "Race Group", y = "Average Income") +
  theme_minimal() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +  # Expand upper limit
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  )

# Region proportion and income
region_count <- data %>%
  group_by(region) %>%
  summarise(count = n()) %>%
  mutate(percentage = round(count / sum(count) * 100, 1))

pie_chart_region <- ggplot(region_count, aes(x = "", y = percentage, fill = region)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  geom_text(aes(label = paste0(percentage, "%")),
            position = position_stack(vjust = 0.5), size = 3) +
  theme_void() +
  theme(legend.position = "right") +
  labs(fill = "Region")

avg_income_region <- data %>%
  group_by(region) %>%
  summarise(Average_Income = mean(INCWAGE, na.rm = TRUE))

bar_chart_region <- ggplot(avg_income_region, aes(x = region, y = Average_Income, fill = region)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = round(Average_Income, 0)), 
            vjust = -0.5, size = 3) +
  labs(x = "Region", y = "Average Income") +
  theme_minimal() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.2))) +  # Expand upper limit
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  )
# Education proportion and income
education_count <- data %>%
  group_by(education_level) %>%
  summarise(count = n()) %>%
  mutate(percentage = round(count / sum(count) * 100, 1))

education_levels <- c("Below_High_School", "High_School", "Some_College", "Bachelor", "Above_Bachelor")
education_count <- education_count %>%
  mutate(education_level = factor(education_level, levels = education_levels))

avg_income_education <- data %>%
  group_by(education_level) %>%
  summarise(Average_Income = mean(INCWAGE, na.rm = TRUE)) %>%
  mutate(education_level = factor(education_level, levels = education_levels))

# Pie chart: education level proportion
pie_chart_education <- ggplot(education_count, aes(x = "", y = percentage, fill = education_level)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  geom_text(aes(label = paste0(percentage, "%")),
            position = position_stack(vjust = 0.5), size = 3) +
  theme_void() +
  theme(legend.position = "right") +
  labs(fill = "Education Level")

# Bar chart: average income by education level, ordered
bar_chart_education <- ggplot(avg_income_education, aes(x = education_level, y = Average_Income, fill = education_level)) +
  geom_bar(stat = "identity", width = 0.6) +
  geom_text(aes(label = round(Average_Income, 0)), 
            vjust = -0.5, size = 3) +
  labs(x = "Education Level", y = "Average Income") +
  theme_minimal() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.2)), labels = scales::comma) +  # Use comma format for y-axis
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "none"
  )
# Output all eight charts in four rows with two charts per row
pie_chart_gender
bar_chart_gender
pie_chart_race
bar_chart_race
pie_chart_region
bar_chart_region
pie_chart_education
bar_chart_education

```



@fig-demographics-distribution illustrates the distribution of demographic characteristics and their relationship with average income across gender, race, region, and education level. Pie charts display the proportional distribution of each group, while bar charts show corresponding average income levels, providing a straightforward depiction of these relationships.

Chart (a) shows the gender distribution: females account for 48.9% of the population, and males 51.1%, indicating a nearly equal split. Chart (b) shows that males earn an average income of $82,840, compared to $57,146 for females.

Chart (c) presents the racial composition, with White individuals forming the largest group at 67%, followed by Black individuals at 18.2%, Asians at 6.8%, and other racial groups at 8.1%. Chart (d) shows that Asians have the highest average income at $96,574, followed by White individuals at $73,778. Black individuals and other racial groups earn $51,221 and $56,604, respectively.

Chart (e) shows the regional distribution. The West represents the largest share at 29%, followed by the Northeast (26.6%), the South (24.1%), and the Midwest (20.3%). Chart (f) indicates that the Midwest has the lowest average income at $62,046, while the Northeast has the highest at $78,138. The South and West have average incomes of $66,954 and $75,293, respectively.

Chart (g) shows education levels: 16.5% of the population has less than a high school education, 30.4% has completed high school, 23.5% has some college education, 26.2% holds a bachelor’s degree, and 9.5% has education beyond a bachelor’s degree. Chart (h) highlights the connection between education and income. Those with less than a high school education earn $36,149 on average, while individuals with a bachelor’s degree or higher earn $87,465 and $124,144, respectively. Income increases steadily with higher levels of education.



```{r}
#| echo: false
#| warning: false
#| message: false
#| label: fig-combined-visualizations
#| fig-cap: "Income Trends by Age and Work Hours"
#| fig-subcap: [
#| "Work Hours vs Income", 
#| "Average Income by Age", 
#| "Age vs Income", 
#| "Average Income by Work Hours"
#| ]
#| layout-ncol: 2

# Calculate average income by work hours
workhours_avg_income <- data %>%
  group_by(UHRSWORK) %>%
  summarise(avg_income = mean(INCWAGE, na.rm = TRUE))

# Calculate average income by age
age_avg_income <- data %>%
  group_by(age) %>%
  summarise(avg_income = mean(INCWAGE, na.rm = TRUE))

# Work Hours vs Income with quadratic fit
plot1 <- ggplot(data, aes(x = UHRSWORK, y = INCWAGE)) +
  geom_point(color = "blue", alpha = 0.6) +
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), color = "red") +
  labs(x = "Work Hours", y = "Income") +
  theme_minimal() +
  theme(plot.title = element_blank()) +
  scale_y_continuous(labels = comma)

# Line chart of average income by work hours 
plot2 <- ggplot(workhours_avg_income, aes(x = UHRSWORK, y = avg_income)) +
  geom_line(color = "blue", size = 1) +
  geom_point(color = "blue", size = 2) +
  labs(x = "Work Hours", y = "Average Income") +
  theme_minimal() +
  theme(plot.title = element_blank())

# Age vs Income with quadratic fit
plot3 <- ggplot(data, aes(x = age, y = INCWAGE)) +
  geom_point(color = "orange", alpha = 0.6) +
  geom_smooth(method = "lm", formula = y ~ poly(x, 2), color = "red") +
  labs(x = "Age", y = "Income") +
  theme_minimal() +
  theme(plot.title = element_blank()) +
  scale_y_continuous(labels = comma)


# Line chart of average income by age (no change needed)
plot4 <- ggplot(age_avg_income, aes(x = age, y = avg_income)) +
  geom_line(color = "orange", size = 1) +
  geom_point(color = "orange", size = 2) +
  labs(x = "Age", y = "Average Income") +
  theme_minimal() +
  theme(plot.title = element_blank())


# Display the plots
plot1
plot2
plot3
plot4

```

@fig-combined-visualizations examines the relationship between income, work hours, and age, incorporating both individual-level data and aggregated trends.

Chart (a) is a scatter plot of work hours versus income, with each point representing an individual. The red quadratic regression line indicates a positive correlation between income and work hours, where longer hours generally lead to higher income. However, the regression line primarily reflects a linear trend, suggesting a stable relationship between income and work hours without significant signs of deceleration. Additionally, income variability increases with longer work hours, particularly beyond 50 hours per week, where fluctuations become more pronounced. Chart (b) illustrates the relationship between work hours and average income. While income generally increases with work hours, especially between 20 and 50 hours per week, it becomes unstable beyond 50 hours.

Chart (c) is a scatter plot of age versus income, with the red quadratic regression line showing that income increases with age before eventually declining. Chart (d) depicts the trend of average income by age. The line chart shows that average income steadily rises with age, peaking in the late 40s and early 50s, and gradually declines as individuals approach retirement age.



```{r}
#| echo: false
#| warning: false
#| label: fig-Education-Race
#| fig-cap: "Proportion of Education Levels by Race Group"

# Ensure the order of education levels, arranged from low to high
education_order <- c("Below_High_School", "High_School", "Some_College", "Bachelor", "Above_Bachelor")
race_order <- c(unique(data$race_group[data$race_group != "Other"]), "Other")

# Set education levels and race groups as factors with specified order
data$education_level <- factor(data$education_level, levels = education_order)
data$race_group <- factor(data$race_group, levels = race_order)

# Create a contingency table and fill missing values with 0
education_race_crosstab <- prop.table(table(data$education_level, data$race_group), margin = 2)
education_race_crosstab[is.na(education_race_crosstab)] <- 0  # Fill NaN with 0

# Convert the data from wide to long format
heatmap_data <- melt(education_race_crosstab)

# Plot the heatmap with proportion labels and dynamic text color
ggplot(heatmap_data, aes(Var2, Var1, fill = value)) +
  geom_tile(color = "white") +  # Heatmap tiles
  geom_text(
    aes(
      label = sprintf("%.2f", value),
      color = ifelse(value > 0.25, "white", "black")  
    ),
    size = 4
  ) +
  scale_fill_gradient(low = "white", high = "blue", name = "Proportion") +
  scale_color_manual(values = c("black" = "black", "white" = "white"), guide = "none") +  # Define color mapping
  labs(
    x = "Race Group",
    y = "Education Level"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

The chart illustrates the proportion of different education levels across racial groups. The horizontal axis represents racial groups, including "Asian," "Black," "White," and "Other," while the vertical axis represents education levels, ranging from "Below High School" to "Above Bachelor." The intensity of blue indicates the proportion, with darker shades representing higher values.

Among Asians, the proportion of highly educated individuals is relatively high, with 38% holding a bachelor's degree and 30% having education beyond a bachelor's degree, while the proportion of those with "Below High School" education is 0%. In the Black group, "High School" accounts for the largest proportion at 32%, followed by "Some College" at 27%, while those with "Above Bachelor" degrees make up only 16%. In the White group, "High School" accounts for 29%, with 27% holding a bachelor's degree and 24% having "Some College" education, while 17% have "Above Bachelor" degrees. Among the "Other" group, 40% have a "High School" education, 25% have "Some College," 17% hold a bachelor's degree, and only 9% have "Above Bachelor" degrees.

Overall, the distribution of education levels varies across racial groups. Asians have a higher proportion of highly educated individuals compared to other groups, while "High School" education is more prevalent among Black and "Other" groups. This reflects the complex relationship between race and educational background.









# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.


# Results

Our results are summarized in @tbl-modelresults.



# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 



\newpage


# References


